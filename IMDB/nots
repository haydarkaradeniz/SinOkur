<center><iframe class="iframe-{SIMPLETEXT}" src="imdb/imdb.php?id={SIMPLETEXT}" title="Künye" style="display: block; width: 580px; height: 300px; border: none; color-scheme: light"></iframe></center>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kullanıcı Uygulaması</title>
</head>
<body style="margin:0">
<iframe id="sanatcilar-iframe" src="../imdb\imdbDetail.php?detail=1" title="Sanatçılar" style="display: block; width: 100%; height: 100vh; border: none;"></iframe>
</body>
</html>



if(!this.imdbID && this.detailMode) {
      let uri2 = window.parent.location.search.substring(1); 
      let params2 = new URLSearchParams(uri2);
      this.imdbID = params2.get("id");    	
     }

     test1() {
        var fd = new FormData();  
        fd.append('userId', this.profile.userId);
        axios.post(this.getBaseUrl() + 'services/test.php', fd).then(
          resp => {	 
            if(resp.data.testData) {
              var max = resp.data.testData.length>10?10:resp.data.testData.length;
              for(var i=0; i< max; i++) {
                this.getOMDBMovieDetail(resp.data.testData[i].imdbId);
              }
            }
          }
        ).catch((err) => {
          console.error(err);
        }).finally(()=> {
          //
        });
      },
  
      getTestIndex(imdbId) {
        for(var i=0; i< this.searchBox.searchedMovies.length; i++) {
          if(this.searchBox.searchedMovies[i].imdbId == imdbId) {
            return i;
          }
        }
        return -1;
      },
      test2() {
        var fd = new FormData();  
        fd.append('userId', this.profile.userId);
        axios.post(this.getBaseUrl() + 'services/test.php', fd).then(
          resp => {	 
            if(resp.data.testData) {
              const promises = [];
              var max = resp.data.testData.length>10?10:resp.data.testData.length;
              for(var i=0; i< max; i++) {
                var searchedMovieIndex = this.getTestIndex(resp.data.testData[i].imdbId);
                if(searchedMovieIndex>-1) {
                  promises.push(this.addToUserList(resp.data.testData[i].userId, resp.data.testData[i].listId, this.searchBox.searchedMovies[searchedMovieIndex]));
                }
              }
              Promise.all(promises).then(()=> {
                console.log(" haydar done");
            }).catch((err)=>{
              console.error(err);
            });
            }
          }
        ).catch((err) => {
          console.error(err);
        }).finally(()=> {
          //
        });
  
  
      },


      :stylex="{'left':profile.guestMode || selectedListIndex == 6 || selectedListIndex == 7 ? '-150px':(selectedListIndex>7?'-250px':'-170px')}"